<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script
  type="text/javascript"
>
    var prntTypes = '';
    var rvno = '';
    var strUrl = '';
    var pvid = '';
    var custID = '';
    var base_url = "https://designer.theprintgarage.com.au/designer/";
    var thisVendor = '';
    var secretKeyData = '';
    {% assign vendor = product.vendor %}
    thisVendor = "{{ vendor }}";
   {% if customer %}
      custID = {{ customer.id}} ;
    {% else %}
        custID = 0 ;
   {% endif %}
   // for template based product
   var productCat = '';
   var pbti = 0;
   {% for c in product.collections %}
      productCat += {{ c.id}};
         {% if forloop.last != true %}
        productCat += ',';
        {% endif %}
   {% endfor %}
    
    var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    
    var refID = 0;
   
   {% unless product.metafields.Pre-Deco.imprint_design_id == blank %}  
    refID = {{ product.metafields.Pre-Deco.imprint_design_id }};
    $( "#AddToCart" ).replaceWith( "<button type='button' name='cust' id='custom' class='btn' onclick='addPDPtoCart({{ product.id }},"+refID+");'><span id='addPDPtext'>Add to Cart</span></button>" );
    {% endunless %}

  $(document).ready(function() {
  //redirect to site if duplicate product is opened
  if(thisVendor == 'imprintNext'){
          window.location.href="/";
        }
  });
  // for template based product
  if(productCat != ''){
      $.get(base_url+"api/v1/template-products?prodcatID="+productCat,function(data){
    data = JSON.parse(data);
    jQuery.each(data, function(i, item) {
      
      if(item != false){
        pbti = 1;
      }
      });
    });
  }
  $.get(base_url+'api/v1/secretkey',function(html){
    secretKeyData = JSON.parse(html);
  });
  /**
  * Get encrypted order data string.
  *
  * @param {string} urlToEncode - order data string
  * @param {string} secretKey - secret key
  */
  function encrypt(urlToEncode, secretKey) {
    let enCodedBit, encryptedTxt = '', cipherKey = '5';
    urlToEncode += secretKey;
     for (let i = 0; i < urlToEncode.length; i++) {
      enCodedBit = String.fromCharCode(urlToEncode[i].charCodeAt(0) + cipherKey.charCodeAt(0));
      encryptedTxt += enCodedBit;
      }
      encryptedTxt = (btoa(encryptedTxt))
      return encryptedTxt;
    }
  
function customize_product(pid, cid) {
    var url = "";
    var baseurl = "";
    // get the variant id from imprintnext
    let color = $(`#product_form_${pid} .single-option-selector[name='color' i] option`).filter(":selected").val();
    $.ajax({
        url: `${base_url}api/v1/product-options/${pid}/first-variant?color=${color}`,
        type: 'GET',
        dataType: 'json',
        async: false
    }).done(function (response) {
        if (response.status == 1) {
            pvid = response.variant_id;
        } else {
          // get current variant id
          pvid = window.location.search.split('variant=')[1];
          if (pvid == null || pvid === ''){
            pvid = "{{product.selected_or_first_available_variant.id}}";
          }
        }
    });
  
    if (pvid == '') {
      alert('This color is not customizable please select another.');
      return false;
    }
    var qty =0;
    if(document.getElementById('Quantity-product-template')){
        qty = document.getElementById('Quantity-product-template').value;
    } else if(document.getElementsByName('quantity')){
        qty = document.getElementsByName('quantity').value;
    } else if(document.getElementById('qty')){
        qty = document.getElementById('qty').value;
    } else {
        qty = document.getElementById('Qty').value;
    }

    //     get current variant id
    //  if(document.getElementById('Quantity-product-template').style.display == 'none'|| qty === 0){
    //  if(!document.getElementById('stockOut'))
    //  $("<span id='stockOut' style='color: red; font-size: small; padding-left: 12px;'>Out of Stock !!!</span>").insertAfter("#Quantity-product-template");
    //         return;
    //  }

    var urlparam = "customer=" + cid +"&id=" + pid + strUrl +"&qty=" + qty +"&vid=" + pvid +"&pbti=" + pbti;
    if(refID && refID > 0){
        urlparam += "&dpid=" + refID;
        //baseurl = baseurl + "&dpid=" + refID;
    }
    var encryptUrl = encrypt(urlparam, secretKeyData);
    if(pvid){
      var url = base_url+"mobile/index.html?" + encryptUrl ;
      var baseurl = "/pages/designer-studio?" + encryptUrl ;
    }
    
    if (isMobile || navigator.userAgent.match(/Mac/) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2) {
        window.location.href=url;
    } else {
      window.location.href=baseurl;
    }
}
    
function addPDPtoCart(pid,refID) {
    $('#addPDPtext').text('Adding to Cart...');
      var qty =0;
    if(document.getElementById('quantity')) {
      qty = document.getElementById('quantity').value;
    } else if(document.getElementById('Quantity')) {
       qty = document.getElementById('Quantity').value;
    } else if(document.getElementById('qty')) {
       qty = document.getElementById('qty').value;
    } else {
       qty = document.getElementById('Qty').value;
    }

    //   get current variant id
    pvid = window.location.search.split('variant=')[1];
    if (pvid == null || pvid === ''){
      pvid = "{{product.selected_or_first_available_variant.id}}";
    }
    if(pvid && pvid != ''){
      var cartURL = '/cart?view=refitem&ref='+refID+'-'+pvid+'-'+qty;
      window.location.href=cartURL;
    } else {
       alert('Something went wrong. Please try another product.');
    }
}

 $(document).ready(function() {
    try {
         let metafieldElement = document.getElementById("customData");
         let metafieldData = JSON.parse(metafieldElement.textContent);
          console.log(metafieldData);
        if (!metafieldData || !metafieldData.data.options || !metafieldData.data.variants) {
            console.error("Invalid metafield format.");
            return;
        }

        // Hide Shopify's default variant selectors
        document.querySelectorAll(".product-header_option-list").forEach(el => el.style.display = "none");

        let form = document.querySelector(".product-header_product-details");
        if (!form) {
            console.error("Product form not found.");
            return;
        }

        let options = metafieldData.data.options;
        let variants = metafieldData.data.variants;

        // Generate new variant selectors
             const container = document.createElement("div");
        container.setAttribute("li-if", "product.has_only_default_variant != true");
        container.className = "product-header_option-list";

        options.forEach((option, optionKey) => {
            const optionDiv = document.createElement("div");
            optionDiv.setAttribute("li-element", "product-options-loop");
            optionDiv.className = "product-header_option";
            optionDiv.setAttribute("data-productvariantsloop", "true");

            const optionNameDiv = document.createElement("div");
            optionNameDiv.setAttribute("li-element", "product-options-name");
            optionNameDiv.setAttribute("x-text", "option");
            optionNameDiv.textContent = option.name;
            optionDiv.appendChild(optionNameDiv);

            const radioListDiv = document.createElement("div");
            radioListDiv.className = "product-header_radio-list";

            option.values.forEach((variantName, variantKey) => {
                const label = document.createElement("label");
                label.setAttribute("li-element", "product-option-loop");
                label.className = "product-header_radio w-radio";

                const radioButtonDiv = document.createElement("div");
                radioButtonDiv.className = "w-form-formradioinput w-form-formradioinput--inputType-custom product-header_radio-button w-radio-input";
                label.appendChild(radioButtonDiv);

                const input = document.createElement("input");
                input.type = "radio";
                input.setAttribute("li-element", "product-option-input");
                input.style.opacity = "0";
                input.style.position = "absolute";
                input.style.zIndex = "-1";
                input.setAttribute("x-on:click", "setVariant");
                input.name = option.name;
                input.setAttribute("data-name", option.name);
                input.value = variantName;
                input.id = variantName.toString().normalize('NFD').replace(/[\u0300-\u036f]/g, '').toLowerCase().trim().replace(/\s+/g, '-').replace(/[^\w-]+/g, '').replace(/--+/g, '-');
                input.setAttribute(":checked", "selected_or_first_available_variant?.options.includes(variantName)");
                input.setAttribute("data-selectortype", "radio");
                input.className = "data-disabled";
                label.appendChild(input);

                const span = document.createElement("span");
                span.setAttribute("li-element", "product-option-name");
                span.className = "text-size-regular z-index-2 w-form-label";
                span.setAttribute("for", variantName);
                span.setAttribute("x-text", "variantName");
                span.textContent = variantName;
                label.appendChild(span);

                radioListDiv.appendChild(label);
            });

            optionDiv.appendChild(radioListDiv);
            container.appendChild(optionDiv);
        });
        console.log("Custom product options loaded successfully!");
    } catch (error) {
        console.error("Error parsing metafield data:", error);
    }
});
</script>
