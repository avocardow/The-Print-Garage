<style>
  /* Custom styling for horizontally aligned Imprintnext options */
  /* Below changes are theme dependent*/
  #custom-variant-container fieldset {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      border: none; /* Remove default fieldset border */
      margin: 10px 0;
      padding: 0;
  }

  /* Input hidden but clickable through label */
  .custom-option-input {
      display: none;
  }

  /* Label acts like button */
  .custom-option-label {
      display: inline-block;
      padding: 10px 15px;
      border-radius: 50px; /* Oval Shape */
      border: 2px solid #ccc;
      cursor: pointer;
      text-align: center;
      min-width: 50px;
      transition: all 0.3s ease-in-out;
  }

  /* When selected, highlight in orange */
  .custom-option-input:checked + .custom-option-label {
      background-color: #f66718;
      color: #001828;
      border-color: #f66718;
      font-weight: bold;
  }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script
  type="text/javascript"
>
    var prntTypes = '';
    var rvno = '';
    var strUrl = '';
    var pvid = '';
    var custID = '';
    var base_url = "https://designer.theprintgarage.com.au/designer/";
    var thisVendor = '';
    var secretKeyData = '';
    {% assign vendor = product.vendor %}
    thisVendor = "{{ vendor }}";
   {% if customer %}
      custID = {{ customer.id}} ;
    {% else %}
        custID = 0 ;
   {% endif %}
   // for template based product
   var productCat = '';
   var pbti = 0;
   {% for c in product.collections %}
      productCat += {{ c.id}};
         {% if forloop.last != true %}
        productCat += ',';
        {% endif %}
   {% endfor %}
    
    var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    
    var refID = 0;
   
   {% unless product.metafields.Pre-Deco.imprint_design_id == blank %}  
    refID = {{ product.metafields.Pre-Deco.imprint_design_id }};
    $( "#AddToCart" ).replaceWith( "<button type='button' name='cust' id='custom' class='btn' onclick='addPDPtoCart({{ product.id }},"+refID+");'><span id='addPDPtext'>Add to Cart</span></button>" );
    {% endunless %}

  $(document).ready(function() {
  //redirect to site if duplicate product is opened
  if(thisVendor == 'imprintNext'){
          window.location.href="/";
        }
  });
  // for template based product
  if(productCat != ''){
      $.get(base_url+"api/v1/template-products?prodcatID="+productCat,function(data){
    data = JSON.parse(data);
    jQuery.each(data, function(i, item) {
      
      if(item != false){
        pbti = 1;
      }
      });
    });
  }
  $.get(base_url+'api/v1/secretkey',function(html){
    secretKeyData = JSON.parse(html);
  });
  /**
  * Get encrypted order data string.
  *
  * @param {string} urlToEncode - order data string
  * @param {string} secretKey - secret key
  */
  function encrypt(urlToEncode, secretKey) {
    let enCodedBit, encryptedTxt = '', cipherKey = '5';
    urlToEncode += secretKey;
     for (let i = 0; i < urlToEncode.length; i++) {
      enCodedBit = String.fromCharCode(urlToEncode[i].charCodeAt(0) + cipherKey.charCodeAt(0));
      encryptedTxt += enCodedBit;
      }
      encryptedTxt = (btoa(encryptedTxt))
      return encryptedTxt;
    }
  
function customize_product(pid, cid) {
    var url = "";
    var baseurl = "";
    // get the variant id from imprintnext
    //let color = $(`#product_form_${pid} .single-option-selector[name='color' i] option`).filter(":selected").val();
    let firstRadio = document.querySelector('input[name="custom-Color"]');
    let color = firstRadio.value;
    $.ajax({
        url: `${base_url}api/v1/product-options/${pid}/first-variant?color=${color}`,
        type: 'GET',
        dataType: 'json',
        async: false
    }).done(function (response) {
        if (response.status == 1) {
            pvid = response.variant_id;
        } else {
          // get current variant id
          pvid = window.location.search.split('variant=')[1];
          if (pvid == null || pvid === ''){
            pvid = "{{product.selected_or_first_available_variant.id}}";
          }
        }
    });
  variants22 = metafieldData.data.variants;
  console.log(variants22);

    pvid = meta.product.variants[pvid].id;
    alert(pvid);
  
    if(document.getElementById('customData')){
      pvid = document.getElementById("selected-variant-id").textContent;
    }
    if (pvid == '') {
      alert('This color is not customizable please select another.');
      return false;
    }
    var qty =0;
    if(document.getElementById('Quantity-product-template')){
        qty = document.getElementById('Quantity-product-template').value;
    } else if(document.getElementsByName('quantity')){
        qty = document.getElementsByName('quantity').value;
    } else if(document.getElementById('qty')){
        qty = document.getElementById('qty').value;
    }else if(document.getElementById('Qty')){
        qty = document.getElementById('Qty').value;
    } else {
        qty = 1;
    }

    //     get current variant id
    //  if(document.getElementById('Quantity-product-template').style.display == 'none'|| qty === 0){
    //  if(!document.getElementById('stockOut'))
    //  $("<span id='stockOut' style='color: red; font-size: small; padding-left: 12px;'>Out of Stock !!!</span>").insertAfter("#Quantity-product-template");
    //         return;
    //  }

    var urlparam = "customer=" + cid +"&id=" + pid + strUrl +"&qty=" + qty +"&vid=" + pvid +"&pbti=" + pbti;
    if(refID && refID > 0){
        urlparam += "&dpid=" + refID;
        //baseurl = baseurl + "&dpid=" + refID;
    }
    var encryptUrl = encrypt(urlparam, secretKeyData);
    if(pvid){
      var url = base_url+"mobile/index.html?" + encryptUrl ;
      var baseurl = "/pages/designer-studio?" + urlparam ;
    }
    
    if (isMobile || navigator.userAgent.match(/Mac/) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2) {
        window.location.href=url;
    } else {
      window.location.href=baseurl;
    }
}
    
function addPDPtoCart(pid,refID) {
    $('#addPDPtext').text('Adding to Cart...');
      var qty =0;
    if(document.getElementById('quantity')) {
      qty = document.getElementById('quantity').value;
    } else if(document.getElementById('Quantity')) {
       qty = document.getElementById('Quantity').value;
    } else if(document.getElementById('qty')) {
       qty = document.getElementById('qty').value;
    } else {
       qty = document.getElementById('Qty').value;
    }

    //   get current variant id
    pvid = window.location.search.split('variant=')[1];
    if (pvid == null || pvid === ''){
      pvid = "{{product.selected_or_first_available_variant.id}}";
    }
    if(pvid && pvid != ''){
      var cartURL = '/cart?view=refitem&ref='+refID+'-'+pvid+'-'+qty;
      window.location.href=cartURL;
    } else {
       alert('Something went wrong. Please try another product.');
    }
}

/* additional variation setup */
 $(document).ready(function() {
    try {
         let metafieldElement = document.getElementById("customData");
         let metafieldData = JSON.parse(metafieldElement.textContent);
          console.log(metafieldData);
        if (!metafieldData || !metafieldData.data.options || !metafieldData.data.variants) {
            console.error("Invalid metafield format.");
            return;
        }
        //Hide Add to cart and Quantity button
        $('.product-header_quantity').hide();
        // Hide Shopify's default variant selectors
        document.querySelectorAll(".product-header_option-list").forEach(el => el.style.display = "none");

        let form = document.querySelector(".product-header_product-details");
        if (!form) {
            console.error("Product form not found.");
            return;
        }

        let options = metafieldData.data.options;
    let variants = metafieldData.data.variants;

    let container = document.createElement("div");
    container.setAttribute("id", "custom-variant-container");
    container.style.marginTop = "10px";

     // Function to find matching variant ID
    function getVariantId(selectedOptions) {
        let selectedTitle = selectedOptions.join("/"); 
        let matchedVariant = variants.find(variant => {
            if(variant.title === selectedTitle){
              return variant;
            }  
        });
        return matchedVariant ? matchedVariant.xe_id : null;
    }


    // Create variant selectors
    let selectedOptions = {}; // Store user selections
    options.forEach((option, optionIndex) => {
        let fieldset = document.createElement("fieldset");
        fieldset.className = "js product-form__input product-form__input--pill";

        let legend = document.createElement("legend");
        legend.className = "form__label";
        legend.textContent = option.name;
        fieldset.appendChild(legend);

        option.values.forEach((value, valueIndex) => {
            let input = document.createElement("input");
            input.type = "radio";
            input.id = `custom-option-${optionIndex}-${valueIndex}`;
            input.name = `custom-${option.name}`;
            input.value = value;
            input.className = "custom-option-input";
            input.setAttribute("data-option", option.name);

            //Auto-select the first option in each group
            if (valueIndex === 0) {
                input.checked = true;
                selectedOptions[option.name] = value;
            }

            let label = document.createElement("label");
            label.setAttribute("for", input.id);
            label.className = "custom-option-label";
            label.innerHTML = `${value}`;

            // Update selected options when changed
            input.addEventListener("change", function () {
                selectedOptions[option.name] = this.value;
                let selectedVariantId = getVariantId(Object.values(selectedOptions));

                console.log("Selected Variant ID:", selectedVariantId);
                document.getElementById("selected-variant-id").textContent = selectedVariantId || "No Variant Found";
            });

            fieldset.appendChild(input);
            fieldset.appendChild(label);
        });

        container.appendChild(fieldset);
    });

    // Insert below price
    let priceElement = document.querySelector(".product-header_price-wrapper");
    priceElement.insertAdjacentElement("afterend", container);

    // Add element to display selected variant ID
    let variantIdDisplay = document.createElement("div");
    variantIdDisplay.setAttribute("id", "selected-variant-id");
    variantIdDisplay.style.display = "none";
    priceElement.insertAdjacentElement("afterend", variantIdDisplay);

    // Set initial variant ID based on default selections
    let initialVariantId = getVariantId(Object.values(selectedOptions));
    document.getElementById("selected-variant-id").textContent = initialVariantId || "No Variant Found";


        console.log("Custom product options loaded successfully!");
    } catch (error) {
        console.error("Error parsing metafield data:", error);
    }
});
</script>
